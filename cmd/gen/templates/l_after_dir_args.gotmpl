AFTER_DIR_ARGS:
{{ template "skip_irrelevant" }}
switch dirOn {
case dirField:
	if i.head >= len(i.str) {
		i.errc, i.expect = ErrUnexpEOF, ExpectAfterFieldName
		goto ERROR
	}
	switch i.str[i.head] {
	case '#':
		goto COMMENT
	case '@':
		i.head++
		i.expect = ExpectDir
		goto DIR_NAME
	case '{':
		i.expect = ExpectSelSet
		goto SELECTION_SET
	default:
		i.expect, dirOn = ExpectAfterSelection, 0
		goto AFTER_SELECTION
	}
case dirOpr:
	if i.head >= len(i.str) {
		i.errc, i.expect = ErrUnexpEOF, ExpectAfterDefKeyword
		goto ERROR
	}
	switch i.str[i.head] {
	case '#':
		goto COMMENT
	case '@':
		i.head++
		i.expect = ExpectDir
		goto DIR_NAME
	default:
		i.expect, dirOn = ExpectSelSet, 0
		goto SELECTION_SET
	}
case dirVar:
	{{ template "skip_irrelevant" }}
	if i.head >= len(i.str) {
		i.errc, i.expect = ErrUnexpEOF, ExpectAfterVarType
		goto ERROR
	}
	switch i.str[i.head] {
	case '#':
		goto COMMENT
	case '@':
		i.head++
		i.expect = ExpectDir
		goto DIR_NAME
	default:
		i.expect, dirOn = ExpectAfterVarType, 0
		goto OPR_VAR
	}
case dirFragRef:
	if i.head >= len(i.str) {
		i.errc, i.expect = ErrUnexpEOF, ExpectAfterSelection
		goto ERROR
	}
	switch i.str[i.head] {
	case '#':
		goto COMMENT
	case '@':
		i.head++
		i.expect = ExpectDir
		goto DIR_NAME
	default:
		i.expect, dirOn = ExpectAfterSelection, 0
		goto AFTER_SELECTION
	}
case dirFragInlineOrDef:
	if i.head >= len(i.str) {
		i.errc, i.expect = ErrUnexpEOF, ExpectSelSet
		goto ERROR
	}
	switch i.str[i.head] {
	case '#':
		goto COMMENT
	case '@':
		i.head++
		i.expect = ExpectDir
		goto DIR_NAME
	default:
		i.expect = ExpectSelSet
		goto SELECTION_SET
	}
default:
	// This line is only executed if we forgot to handle a dirOn case.
	panic(fmt.Errorf("unhandled dirOn case: %#v", dirOn))
}
