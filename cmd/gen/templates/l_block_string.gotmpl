BLOCK_STRING:
i.expect = ExpectEndOfBlockString
for {
	for i.head+7 < len(i.str) {
		if i.str[i.head] == '\\' ||
			i.str[i.head] == '"' ||
			(i.str[i.head] < 0x20 &&
			i.str[i.head] != '\t' &&
			i.str[i.head] != '\n' &&
			i.str[i.head] != '\r') {
			break
		}
		i.head++
		if i.str[i.head] == '\\' ||
			i.str[i.head] == '"' ||
			(i.str[i.head] < 0x20 &&
			i.str[i.head] != '\t' &&
			i.str[i.head] != '\n' &&
			i.str[i.head] != '\r') {
			break
		}
		i.head++
		if i.str[i.head] == '\\' ||
			i.str[i.head] == '"' ||
			(i.str[i.head] < 0x20 &&
			i.str[i.head] != '\t' &&
			i.str[i.head] != '\n' &&
			i.str[i.head] != '\r') {
			break
		}
		i.head++
		if i.str[i.head] == '\\' ||
			i.str[i.head] == '"' ||
			(i.str[i.head] < 0x20 &&
			i.str[i.head] != '\t' &&
			i.str[i.head] != '\n' &&
			i.str[i.head] != '\r') {
			break
		}
		i.head++
		if i.str[i.head] == '\\' ||
			i.str[i.head] == '"' ||
			(i.str[i.head] < 0x20 &&
			i.str[i.head] != '\t' &&
			i.str[i.head] != '\n' &&
			i.str[i.head] != '\r') {
			break
		}
		i.head++
		if i.str[i.head] == '\\' ||
			i.str[i.head] == '"' ||
			(i.str[i.head] < 0x20 &&
			i.str[i.head] != '\t' &&
			i.str[i.head] != '\n' &&
			i.str[i.head] != '\r') {
			break
		}
		i.head++
		if i.str[i.head] == '\\' ||
			i.str[i.head] == '"' ||
			(i.str[i.head] < 0x20 &&
			i.str[i.head] != '\t' &&
			i.str[i.head] != '\n' &&
			i.str[i.head] != '\r') {
			break
		}
		i.head++
		if i.str[i.head] == '\\' ||
			i.str[i.head] == '"' ||
			(i.str[i.head] < 0x20 &&
			i.str[i.head] != '\t' &&
			i.str[i.head] != '\n' &&
			i.str[i.head] != '\r') {
			break
		}
		i.head++
	}
	{{ template "check_eof" }}
	if i.str[i.head] == '\\' &&
		i.str[i.head+3] == '"' &&
		i.str[i.head+2] == '"' &&
		i.str[i.head+1] == '"' {
		i.head += len(`\"""`)
		continue
	} else if i.str[i.head] == '"' &&
		i.str[i.head+2] == '"' &&
		i.str[i.head+1] == '"' {
		i.token = TokenStrBlock
		{{- template "callback" . -}}
		i.head += len(`"""`)
		goto AFTER_VALUE_INNER
	} else if i.str[i.head] < 0x20 &&
		i.str[i.head] != '\t' &&
		i.str[i.head] != '\n' &&
		i.str[i.head] != '\r' {
		i.errc = ErrUnexpToken
		goto ERROR
	}
	i.head++
}
